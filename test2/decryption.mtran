# //  ModelSim SE-64 10.1b Apr 26 2012 Linux 2.6.32-504.16.2.el6.x86_64
# //
# //  Copyright 1991-2012 Mentor Graphics Corporation
# //  All Rights Reserved.
# //
# //  THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION
# //  WHICH IS THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS
# //  LICENSORS AND IS SUBJECT TO LICENSE TERMS.
# //
# vsim +no_glitch_msg -L /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work -L /home/ecegrid/a/ece337/Class0.5u/GOLD_LIB -Lf /home/ecegrid/a/ece337/Class0.5u/ECE337_IP/vsim -coverage -i -t ps mapped_work.tb_decryption 
# ** Note: (vsim-3812) Design is being optimized...
# Loading sv_std.std
# Loading work.tb_decryption(fast)
# Loading work.decryption(fast)
# Loading work.inv_add_roundkey_10(fast)
# Loading work.inv_round_8(fast)
# Loading work.inv_sub_byte_9(fast)
# Loading work.inv_add_roundkey_9(fast)
# Loading work.inv_mix_column_8(fast)
# Loading work.inv_round_7(fast)
# Loading work.inv_sub_byte_8(fast)
# Loading work.inv_add_roundkey_8(fast)
# Loading work.inv_mix_column_7(fast)
# Loading work.inv_round_6(fast)
# Loading work.inv_sub_byte_7(fast)
# Loading work.inv_add_roundkey_7(fast)
# Loading work.inv_mix_column_6(fast)
# Loading work.inv_round_5(fast)
# Loading work.inv_sub_byte_6(fast)
# Loading work.inv_add_roundkey_6(fast)
# Loading work.inv_mix_column_5(fast)
# Loading work.inv_round_4(fast)
# Loading work.inv_sub_byte_5(fast)
# Loading work.inv_add_roundkey_5(fast)
# Loading work.inv_mix_column_4(fast)
# Loading work.inv_round_3(fast)
# Loading work.inv_sub_byte_4(fast)
# Loading work.inv_add_roundkey_4(fast)
# Loading work.inv_mix_column_3(fast)
# Loading work.inv_round_2(fast)
# Loading work.inv_sub_byte_3(fast)
# Loading work.inv_add_roundkey_3(fast)
# Loading work.inv_mix_column_2(fast)
# Loading work.inv_round_1(fast)
# Loading work.inv_sub_byte_2(fast)
# Loading work.inv_add_roundkey_2(fast)
# Loading work.inv_mix_column_1(fast)
# Loading work.inv_round_0(fast)
# Loading work.inv_sub_byte_1(fast)
# Loading work.inv_add_roundkey_1(fast)
# Loading work.inv_mix_column_0(fast)
# Loading work.inv_round10(fast)
# Loading work.inv_sub_byte_0(fast)
# Loading work.inv_add_roundkey_0(fast)
# Loading std.standard
# Loading std.textio(body)
# Loading ieee.std_logic_1164(body)
# Loading ieee.math_real(body)
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.dffsr(metastabilitywrapperarch)#1
# Loading ieee.vital_timing(body)
# Loading ieee.vital_primitives(body)
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.prim(body)
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.dffsr_core(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.xor2x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.or2x2(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.and2x2(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.oai21x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.nand2x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.nand3x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.oai22x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.aoi21x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.nor2x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.aoi22x1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.invx2(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.bufx2(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.invx1(behavioral)#1
# Loading /home/ecegrid/a/ece337/Course_Prod/Cell_Libs/AMI_05/vhdl_work.xnor2x1(behavioral)#1
add wave -position insertpoint  \
sim:/tb_decryption/tb_default_test_num \
sim:/tb_decryption/tb_clk \
sim:/tb_decryption/tb_n_rst \
sim:/tb_decryption/tb_state_array_in \
sim:/tb_decryption/tb_round_key \
sim:/tb_decryption/tb_state_array_out
run 1000 ns
